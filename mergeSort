public static void merge(int[] A,int s,int mid,int e){
        int m = mid-s+1;
        int n = e-mid;
        
        int[] left = new int[m];
        int[] right = new int[n];
        
        for(int i = 0 ; i < m; i++){
            left[i] = A[s+i];
        }
        for(int i = 0; i < n; i++){
            right[i] = A[mid+i+1];
        }
        
        int i = 0;
        int j = 0;
        int k = s;
        while(i < m && j < n){
            if(left[i] <= right[j]){
                A[k] = left[i];
                i++;
            }
            else{
                A[k] = right[j];
                j++;
            }
            k++;
        }
        while(i < m){
            A[k] = left[i];
            i++;
            k++;
        }
        while(j < n){
            A[k] = right[j];
            j++;
            k++;
        }
    }
    public static void mergeSort(int[] A,int s,int e){
        if(s < e){
            int mid = s +(e-s)/2;
            mergeSort(A,s,mid);
            mergeSort(A,mid+1,e);
            merge(A,s,mid,e);
        }
    }
